{"remainingRequest":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_ts-loader@6.2.2@ts-loader/index.js??ref--15-2!/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_vue-loader@16.8.3@vue-loader/dist/index.js??ref--1-1!/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/views/database/index.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/views/database/index.vue","mtime":1653478762406},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/babel.config.js","mtime":1638601854000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_ts-loader@6.2.2@ts-loader/index.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_vue-loader@16.8.3@vue-loader/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8g5a+85YWl5qih5Z2XCmltcG9ydCB2dWVKc29uRWRpdG9yIGZyb20gInZ1ZS1qc29uLWVkaXRvciI7CmV4cG9ydCBkZWZhdWx0IHsKICAvLyDms6jlhoznu4Tku7YKICBjb21wb25lbnRzOiB7CiAgICB2dWVKc29uRWRpdG9yOiB2dWVKc29uRWRpdG9yCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaGFzSnNvbkZsYWc6IHRydWUsCiAgICAgIC8vIGpzb27mlbDmja4KICAgICAgcmVzdWx0SW5mbzogewogICAgICAgIGVtcGxveWVlczogW3sKICAgICAgICAgIGZpcnN0TmFtZTogIkJpbGwiLAogICAgICAgICAgbGFzdE5hbWU6ICJHYXRlcyIKICAgICAgICB9LCB7CiAgICAgICAgICBmaXJzdE5hbWU6ICJHZW9yZ2UiLAogICAgICAgICAgbGFzdE5hbWU6ICJCdXNoIgogICAgICAgIH0sIHsKICAgICAgICAgIGZpcnN0TmFtZTogIlRob21hcyIsCiAgICAgICAgICBsYXN0TmFtZTogIkNhcnRlciIKICAgICAgICB9XQogICAgICB9LAogICAgICBqc29uRGF0YTogewogICAgICAgIHRvdGFsOiAyNSwKICAgICAgICBsaW1pdDogMTAsCiAgICAgICAgc2tpcDogMCwKICAgICAgICBsaW5rczogewogICAgICAgICAgcHJldmlvdXM6IHVuZGVmaW5lZCwKICAgICAgICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQoKSB7Ly8KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGRhdGE6IFt7CiAgICAgICAgICBpZDogIjU5NjhmY2FkNjI5ZmE4NGFiNjVhNTI0NyIsCiAgICAgICAgICBmaXJzdG5hbWU6ICJBZGEiLAogICAgICAgICAgbGFzdG5hbWU6ICJMb3ZlbGFjZSIsCiAgICAgICAgICBhd2FyZHM6IG51bGwsCiAgICAgICAgICBrbm93bjogWyJtYXRoZW1hdGljcyIsICJjb21wdXRpbmciXSwKICAgICAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgICAgIGxhdDogNDQuNTYzODM2LAogICAgICAgICAgICBsbmc6IDYuNDk1MTM5CiAgICAgICAgICB9LAogICAgICAgICAgZGVzY3JpcHRpb246ICJBdWd1c3RhIEFkYSBLaW5nLCBDb3VudGVzcyBvZiBMb3ZlbGFjZSAoblx4RTllIEJ5cm9uOyAxMCBEZWNlbWJlciAxODE1IFx1MjAxMyAyNyBOb3ZlbWJlciAxODUyKSB3YXMgYW4gRW5nbGlzaCBtYXRoZW1hdGljaWFuIGFuZCB3cml0ZXIsXG4gICAgICAgICAgICBjaGllZmx5IGtub3duIGZvciBoZXIgd29yayBvbiBDaGFybGVzIEJhYmJhZ2UncyBwcm9wb3NlZCBtZWNoYW5pY2FsIGdlbmVyYWwtcHVycG9zZSBjb21wdXRlcixcbiAgICAgICAgICAgIHRoZSBBbmFseXRpY2FsIEVuZ2luZS4gU2hlIHdhcyB0aGUgZmlyc3QgdG8gcmVjb2duaXNlIHRoYXQgdGhlIG1hY2hpbmUgaGFkIGFwcGxpY2F0aW9ucyBiZXlvbmQgcHVyZSBjYWxjdWxhdGlvbixcbiAgICAgICAgICAgIGFuZCBwdWJsaXNoZWQgdGhlIGZpcnN0IGFsZ29yaXRobSBpbnRlbmRlZCB0byBiZSBjYXJyaWVkIG91dCBieSBzdWNoIGEgbWFjaGluZS5cbiAgICAgICAgICAgIEFzIGEgcmVzdWx0LCBzaGUgaXMgc29tZXRpbWVzIHJlZ2FyZGVkIGFzIHRoZSBmaXJzdCB0byByZWNvZ25pc2UgdGhlIGZ1bGwgcG90ZW50aWFsIG9mIGEgXCJjb21wdXRpbmcgbWFjaGluZVwiIGFuZCB0aGUgZmlyc3QgY29tcHV0ZXIgcHJvZ3JhbW1lci4iLAogICAgICAgICAgYm9ybkF0OiAiMTgxNS0xMi0xMFQwMDowMDowMC4wMDBaIiwKICAgICAgICAgIGRpZWRBdDogIjE4NTItMTEtMjdUMDA6MDA6MDAuMDAwWiIKICAgICAgICB9LCB7CiAgICAgICAgICBpZDogIjU5NjhmY2FkNjI5ZmE4NGFiNjVhNTI0NiIsCiAgICAgICAgICBmaXJzdG5hbWU6ICJHcmFjZSIsCiAgICAgICAgICBsYXN0bmFtZTogIkhvcHBlciIsCiAgICAgICAgICBhd2FyZHM6IFsiRGVmZW5zZSBEaXN0aW5ndWlzaGVkIFNlcnZpY2UgTWVkYWwiLCAiTGVnaW9uIG9mIE1lcml0IiwgIk1lcml0b3Jpb3VzIFNlcnZpY2UgTWVkYWwiLCAiQW1lcmljYW4gQ2FtcGFpZ24gTWVkYWwiLCAiV29ybGQgV2FyIElJIFZpY3RvcnkgTWVkYWwiLCAiTmF0aW9uYWwgRGVmZW5zZSBTZXJ2aWNlIE1lZGFsIiwgIkFybWVkIEZvcmNlcyBSZXNlcnZlIE1lZGFsIiwgIk5hdmFsIFJlc2VydmUgTWVkYWwiLCAiUHJlc2lkZW50aWFsIE1lZGFsIG9mIEZyZWVkb20iXSwKICAgICAgICAgIGtub3duOiBudWxsLAogICAgICAgICAgcG9zaXRpb246IHsKICAgICAgICAgICAgbGF0OiA0My42MTQ2MjQsCiAgICAgICAgICAgIGxuZzogMy44Nzk5OTUKICAgICAgICAgIH0sCiAgICAgICAgICBkZXNjcmlwdGlvbjogIkdyYWNlIEJyZXdzdGVyIE11cnJheSBIb3BwZXIgKG5ceEU5ZSBNdXJyYXk7IERlY2VtYmVyIDksIDE5MDYgXHUyMDEzIEphbnVhcnkgMSwgMTk5MilcbiAgICAgICAgICAgIHdhcyBhbiBBbWVyaWNhbiBjb21wdXRlciBzY2llbnRpc3QgYW5kIFVuaXRlZCBTdGF0ZXMgTmF2eSByZWFyIGFkbWlyYWwuXG4gICAgICAgICAgICBPbmUgb2YgdGhlIGZpcnN0IHByb2dyYW1tZXJzIG9mIHRoZSBIYXJ2YXJkIE1hcmsgSSBjb21wdXRlcixcbiAgICAgICAgICAgIHNoZSB3YXMgYSBwaW9uZWVyIG9mIGNvbXB1dGVyIHByb2dyYW1taW5nIHdobyBpbnZlbnRlZCBvbmUgb2YgdGhlIGZpcnN0IGNvbXBpbGVyIHJlbGF0ZWQgdG9vbHMuXG4gICAgICAgICAgICBTaGUgcG9wdWxhcml6ZWQgdGhlIGlkZWEgb2YgbWFjaGluZS1pbmRlcGVuZGVudCBwcm9ncmFtbWluZyBsYW5ndWFnZXMsIHdoaWNoIGxlZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgQ09CT0wsXG4gICAgICAgICAgICBhbiBlYXJseSBoaWdoLWxldmVsIHByb2dyYW1taW5nIGxhbmd1YWdlIHN0aWxsIGluIHVzZSB0b2RheS4iLAogICAgICAgICAgYm9ybkF0OiAiMTgxNS0xMi0xMFQwMDowMDowMC4wMDBaIiwKICAgICAgICAgIGRpZWRBdDogIjE4NTItMTEtMjdUMDA6MDA6MDAuMDAwWiIKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgLy8gbW91bnRlZDogZnVuY3Rpb24gKCkge30sCiAgbWV0aG9kczogewogICAgb25Kc29uQ2hhbmdlOiBmdW5jdGlvbiBvbkpzb25DaGFuZ2UodmFsdWUpIHsKICAgICAgLy8gY29uc29sZS5sb2coJ+abtOaUuXZhbHVlOicsIHZhbHVlKTsKICAgICAgLy8g5a6e5pe25L+d5a2YCiAgICAgIHRoaXMub25Kc29uU2F2ZSh2YWx1ZSk7CiAgICB9LAogICAgb25Kc29uU2F2ZTogZnVuY3Rpb24gb25Kc29uU2F2ZSh2YWx1ZSkgewogICAgICAvLyBjb25zb2xlLmxvZygn5L+d5a2YdmFsdWU6JywgdmFsdWUpOwogICAgICAvLyB0aGlzLnJlc3VsdEluZm8gPSB2YWx1ZTsKICAgICAgdGhpcy5oYXNKc29uRmxhZyA9IHRydWU7CiAgICAgIGNvbnNvbGUubG9nKCJyZXN1bHQ6IiwgdGhpcy5yZXN1bHRJbmZvKTsKICAgICAgY29uc29sZS5sb2codmFsdWUpOwogICAgfSwKICAgIG9uRXJyb3I6IGZ1bmN0aW9uIG9uRXJyb3IodmFsdWUpIHsKICAgICAgLy8gY29uc29sZS5sb2coImpzb27plJnor6/kuoZ2YWx1ZToiLCB2YWx1ZSk7CiAgICAgIHRoaXMuaGFzSnNvbkZsYWcgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDmo4Dmn6Vqc29uCiAgICBjaGVja0pzb246IGZ1bmN0aW9uIGNoZWNrSnNvbigpIHsKICAgICAgaWYgKHRoaXMuaGFzSnNvbkZsYWcgPT0gZmFsc2UpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZygianNvbumqjOivgeWksei0pSIpCiAgICAgICAgLy8gdGhpcy4kbWVzc2FnZS5lcnJvcigianNvbumqjOivgeWksei0pSIpCiAgICAgICAgYWxlcnQoImpzb27pqozor4HlpLHotKUiKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gY29uc29sZS5sb2coImpzb27pqozor4HmiJDlip8iKQogICAgICAgIC8vIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcygianNvbumqjOivgeaIkOWKnyIpCiAgICAgICAgYWxlcnQoImpzb27pqozor4HmiJDlip8iKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"mappings":"AACA;AACA,OAAOA,aAAP,MAA0B,iBAA1B;AAEA,eAAe;EACb;EACAC,UAAU,EAAE;IAAED,aAAa,EAAbA;EAAF,CAFC;EAGbE,IAHa,kBAGT;IACF,OAAO;MACLC,WAAW,EAAE,IADR;MAEL;MACAC,UAAU,EAAE;QACVC,SAAS,EAAE,CACT;UACEC,SAAS,EAAE,MADb;UAEEC,QAAQ,EAAE;QAFZ,CADS,EAKT;UACED,SAAS,EAAE,QADb;UAEEC,QAAQ,EAAE;QAFZ,CALS,EAST;UACED,SAAS,EAAE,QADb;UAEEC,QAAQ,EAAE;QAFZ,CATS;MADD,CAHP;MAoBLC,QAAQ,EAAE;QACRC,KAAK,EAAE,EADC;QAERC,KAAK,EAAE,EAFC;QAGRC,IAAI,EAAE,CAHE;QAIRC,KAAK,EAAE;UACLC,QAAQ,EAAEC,SADL;UAELC,IAAI,EAAE,iBACJ;UACD;QAJI,CAJC;QAURb,IAAI,EAAE,CACJ;UACEc,EAAE,EAAE,0BADN;UAEEC,SAAS,EAAE,KAFb;UAGEC,QAAQ,EAAE,UAHZ;UAIEC,MAAM,EAAE,IAJV;UAKEC,KAAK,EAAE,CAAC,aAAD,EAAgB,WAAhB,CALT;UAMEC,QAAQ,EAAE;YACRC,GAAG,EAAE,SADG;YAERC,GAAG,EAAE;UAFG,CANZ;UAUEC,WAAW,inBAVb;UAeEC,MAAM,EAAE,0BAfV;UAgBEC,MAAM,EAAE;QAhBV,CADI,EAmBJ;UACEV,EAAE,EAAE,0BADN;UAEEC,SAAS,EAAE,OAFb;UAGEC,QAAQ,EAAE,QAHZ;UAIEC,MAAM,EAAE,CACN,qCADM,EAEN,iBAFM,EAGN,2BAHM,EAIN,yBAJM,EAKN,4BALM,EAMN,gCANM,EAON,4BAPM,EAQN,qBARM,EASN,+BATM,CAJV;UAeEC,KAAK,EAAE,IAfT;UAgBEC,QAAQ,EAAE;YACRC,GAAG,EAAE,SADG;YAERC,GAAG,EAAE;UAFG,CAhBZ;UAoBEC,WAAW,0iBApBb;UA0BEC,MAAM,EAAE,0BA1BV;UA2BEC,MAAM,EAAE;QA3BV,CAnBI;MAVE;IApBL,CAAP;EAiFD,CArFY;EAsFb;EACAC,OAAO,EAAE;IACPC,YADO,wBACMC,KADN,EACW;MAChB;MACA;MACA,KAAKC,UAAL,CAAgBD,KAAhB;IACD,CALM;IAMPC,UANO,sBAMID,KANJ,EAMS;MACd;MACA;MACA,KAAK1B,WAAL,GAAmB,IAAnB;MACA4B,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAK5B,UAA5B;MACA2B,OAAO,CAACC,GAAR,CAAYH,KAAZ;IACD,CAZM;IAaPI,OAbO,mBAaCJ,KAbD,EAaM;MACX;MACA,KAAK1B,WAAL,GAAmB,KAAnB;IACD,CAhBM;IAiBP;IACA+B,SAlBO,uBAkBE;MACP,IAAI,KAAK/B,WAAL,IAAoB,KAAxB,EAA+B;QAC7B;QACA;QACAgC,KAAK,CAAC,UAAD,CAAL;QACA,OAAO,KAAP;MACD,CALD,MAKO;QACL;QACA;QACAA,KAAK,CAAC,UAAD,CAAL;QACA,OAAO,IAAP;MACD;IACF;EA9BM;AAvFI,CAAf","names":["vueJsonEditor","components","data","hasJsonFlag","resultInfo","employees","firstName","lastName","jsonData","total","limit","skip","links","previous","undefined","next","id","firstname","lastname","awards","known","position","lat","lng","description","bornAt","diedAt","methods","onJsonChange","value","onJsonSave","console","log","onError","checkJson","alert"],"sourceRoot":"","sources":["/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js"],"sourcesContent":["\n// 导入模块\nimport vueJsonEditor from \"vue-json-editor\";\n\nexport default {\n  // 注册组件\n  components: { vueJsonEditor },\n  data() {\n    return {\n      hasJsonFlag: true, // json是否验证通过\n      // json数据\n      resultInfo: {\n        employees: [\n          {\n            firstName: \"Bill\",\n            lastName: \"Gates\",\n          },\n          {\n            firstName: \"George\",\n            lastName: \"Bush\",\n          },\n          {\n            firstName: \"Thomas\",\n            lastName: \"Carter\",\n          },\n        ],\n      },\n\n      jsonData: {\n        total: 25,\n        limit: 10,\n        skip: 0,\n        links: {\n          previous: undefined,\n          next: function () {\n            //\n          },\n        },\n        data: [\n          {\n            id: \"5968fcad629fa84ab65a5247\",\n            firstname: \"Ada\",\n            lastname: \"Lovelace\",\n            awards: null,\n            known: [\"mathematics\", \"computing\"],\n            position: {\n              lat: 44.563836,\n              lng: 6.495139,\n            },\n            description: `Augusta Ada King, Countess of Lovelace (née Byron; 10 December 1815 – 27 November 1852) was an English mathematician and writer,\n            chiefly known for her work on Charles Babbage's proposed mechanical general-purpose computer,\n            the Analytical Engine. She was the first to recognise that the machine had applications beyond pure calculation,\n            and published the first algorithm intended to be carried out by such a machine.\n            As a result, she is sometimes regarded as the first to recognise the full potential of a \"computing machine\" and the first computer programmer.`,\n            bornAt: \"1815-12-10T00:00:00.000Z\",\n            diedAt: \"1852-11-27T00:00:00.000Z\",\n          },\n          {\n            id: \"5968fcad629fa84ab65a5246\",\n            firstname: \"Grace\",\n            lastname: \"Hopper\",\n            awards: [\n              \"Defense Distinguished Service Medal\",\n              \"Legion of Merit\",\n              \"Meritorious Service Medal\",\n              \"American Campaign Medal\",\n              \"World War II Victory Medal\",\n              \"National Defense Service Medal\",\n              \"Armed Forces Reserve Medal\",\n              \"Naval Reserve Medal\",\n              \"Presidential Medal of Freedom\",\n            ],\n            known: null,\n            position: {\n              lat: 43.614624,\n              lng: 3.879995,\n            },\n            description: `Grace Brewster Murray Hopper (née Murray; December 9, 1906 – January 1, 1992)\n            was an American computer scientist and United States Navy rear admiral.\n            One of the first programmers of the Harvard Mark I computer,\n            she was a pioneer of computer programming who invented one of the first compiler related tools.\n            She popularized the idea of machine-independent programming languages, which led to the development of COBOL,\n            an early high-level programming language still in use today.`,\n            bornAt: \"1815-12-10T00:00:00.000Z\",\n            diedAt: \"1852-11-27T00:00:00.000Z\",\n          },\n        ],\n      },\n    };\n  },\n  // mounted: function () {},\n  methods: {\n    onJsonChange(value) {\n      // console.log('更改value:', value);\n      // 实时保存\n      this.onJsonSave(value);\n    },\n    onJsonSave(value) {\n      // console.log('保存value:', value);\n      // this.resultInfo = value;\n      this.hasJsonFlag = true;\n      console.log(\"result:\", this.resultInfo);\n      console.log(value);\n    },\n    onError(value) {\n      // console.log(\"json错误了value:\", value);\n      this.hasJsonFlag = false;\n    },\n    // 检查json\n    checkJson() {\n      if (this.hasJsonFlag == false) {\n        // console.log(\"json验证失败\")\n        // this.$message.error(\"json验证失败\")\n        alert(\"json验证失败\");\n        return false;\n      } else {\n        // console.log(\"json验证成功\")\n        // this.$message.success(\"json验证成功\")\n        alert(\"json验证成功\");\n        return true;\n      }\n    },\n  },\n};\n"]}]}