{"remainingRequest":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_ts-loader@6.2.2@ts-loader/index.js??ref--15-2!/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--14-0!/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/utils/index.ts","dependencies":[{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/utils/index.ts","mtime":1638601854000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/babel.config.js","mtime":1638601854000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_ts-loader@6.2.2@ts-loader/index.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudGVzdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmRvdC1hbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuc3RpY2t5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CgovKioKICogQHBhcmFtIHtkYXRlfSB0aW1lIOmcgOimgei9rOaNoueahOaXtumXtAogKiBAcGFyYW0ge1N0cmluZ30gZm10IOmcgOimgei9rOaNoueahOagvOW8jyDlpoIgeXl5eS1NTS1kZOOAgXl5eXktTU0tZGQgSEg6bW06c3MKICogQHJldHVybnMge1N0cmluZ30KICovCmV4cG9ydCB2YXIgZm9ybWF0VGltZSA9IGZ1bmN0aW9uIGZvcm1hdFRpbWUodGltZSwgZm10KSB7CiAgaWYgKCF0aW1lKSByZXR1cm4gJyc7CiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh0aW1lKTsKICB2YXIgbyA9IHsKICAgICdNKyc6IGRhdGUuZ2V0TW9udGgoKSArIDEsCiAgICAnZCsnOiBkYXRlLmdldERhdGUoKSwKICAgICdIKyc6IGRhdGUuZ2V0SG91cnMoKSwKICAgICdtKyc6IGRhdGUuZ2V0TWludXRlcygpLAogICAgJ3MrJzogZGF0ZS5nZXRTZWNvbmRzKCksCiAgICAncSsnOiBNYXRoLmZsb29yKChkYXRlLmdldE1vbnRoKCkgKyAzKSAvIDMpLAogICAgUzogZGF0ZS5nZXRNaWxsaXNlY29uZHMoKQogIH07CiAgaWYgKC8oeSspLy50ZXN0KGZtdCkpIGZtdCA9IGZtdC5yZXBsYWNlKFJlZ0V4cC4kMSwgKGRhdGUuZ2V0RnVsbFllYXIoKSArICcnKS5zdWJzdHIoNCAtIFJlZ0V4cC4kMS5sZW5ndGgpKTsKCiAgZm9yICh2YXIgayBpbiBvKSB7CiAgICBpZiAobmV3IFJlZ0V4cCgnKCcgKyBrICsgJyknKS50ZXN0KGZtdCkpIHsKICAgICAgZm10ID0gZm10LnJlcGxhY2UoUmVnRXhwLiQxLCAvLyBAdHMtaWdub3JlOiBVbnJlYWNoYWJsZSBjb2RlIGVycm9yCiAgICAgIFJlZ0V4cC4kMS5sZW5ndGggPT09IDEgPyBvW2tdIDogKCcwMCcgKyBvW2tdKS5zdWJzdHIoKCcnICsgb1trXSkubGVuZ3RoKSk7CiAgICB9CiAgfQoKICByZXR1cm4gZm10Owp9Ow=="},{"version":3,"mappings":";;;;;;;;AAAA;;;;;AAKA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CACxBC,IADwB,EAExBC,GAFwB,EAGd;EACV,IAAI,CAACD,IAAL,EAAW,OAAO,EAAP;EACX,IAAME,IAAI,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAb;EACA,IAAMI,CAAC,GAAG;IACR,MAAMF,IAAI,CAACG,QAAL,KAAkB,CADhB;IAER,MAAMH,IAAI,CAACI,OAAL,EAFE;IAGR,MAAMJ,IAAI,CAACK,QAAL,EAHE;IAIR,MAAML,IAAI,CAACM,UAAL,EAJE;IAKR,MAAMN,IAAI,CAACO,UAAL,EALE;IAMR,MAAMC,IAAI,CAACC,KAAL,CAAW,CAACT,IAAI,CAACG,QAAL,KAAkB,CAAnB,IAAwB,CAAnC,CANE;IAORO,CAAC,EAAEV,IAAI,CAACW,eAAL;EAPK,CAAV;EASA,IAAI,OAAOC,IAAP,CAAYb,GAAZ,CAAJ,EACEA,GAAG,GAAGA,GAAG,CAACc,OAAJ,CACJC,MAAM,CAACC,EADH,EAEJ,CAACf,IAAI,CAACgB,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CAFI,CAAN;;EAIF,KAAK,IAAMC,CAAX,IAAgBjB,CAAhB,EAAmB;IACjB,IAAI,IAAIY,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+Bb,GAA/B,CAAJ,EAAyC;MACvCA,GAAG,GAAGA,GAAG,CAACc,OAAJ,CACJC,MAAM,CAACC,EADH,EAEJ;MACAD,MAAM,CAACC,EAAP,CAAUG,MAAV,KAAqB,CAArB,GAAyBhB,CAAC,CAACiB,CAAD,CAA1B,GAAgC,CAAC,OAAOjB,CAAC,CAACiB,CAAD,CAAT,EAAcF,MAAd,CAAqB,CAAC,KAAKf,CAAC,CAACiB,CAAD,CAAP,EAAYD,MAAjC,CAH5B,CAAN;IAKD;EACF;;EACD,OAAOnB,GAAP;AACD,CA9BM","names":["formatTime","time","fmt","date","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"sourceRoot":"","sources":["/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js"],"sourcesContent":["/**\n * @param {date} time 需要转换的时间\n * @param {String} fmt 需要转换的格式 如 yyyy-MM-dd、yyyy-MM-dd HH:mm:ss\n * @returns {String}\n */\nexport const formatTime = (\n  time: string | number | Date,\n  fmt: string\n): string => {\n  if (!time) return ''\n  const date = new Date(time)\n  const o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'H+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    S: date.getMilliseconds(),\n  }\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + '').substr(4 - RegExp.$1.length)\n    )\n  for (const k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(\n        RegExp.$1,\n        // @ts-ignore: Unreachable code error\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\n      )\n    }\n  }\n  return fmt\n}\n"]}]}