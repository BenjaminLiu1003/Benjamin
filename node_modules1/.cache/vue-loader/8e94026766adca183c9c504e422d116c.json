{"remainingRequest":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_vue-loader@16.8.3@vue-loader/dist/index.js??ref--1-1!/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/views/database/index.vue?vue&type=style&index=0&id=a9e79bbe&lang=scss","dependencies":[{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/views/database/index.vue","mtime":1653402369742},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_vue-loader@16.8.3@vue-loader/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/node_modules/_vue-loader@16.8.3@vue-loader/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIkAvYXNzZXRzL3Njc3MvaW5kZXguc2NzcyI7CgouZWwtdGFibGUgLndhcm5pbmctcm93IHsKICAvLyAtLWVsLXRhYmxlLXRyLWJnLWNvbG9yOiB2YXIoLS1lbC1jb2xvci13YXJuaW5nLWxpZ2h0LTkpOwogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKfQoKLmVsLXRhYmxlIC5lcnJvci1yb3cgewogIC0tZWwtdGFibGUtdHItYmctY29sb3I6IHZhcigtLWVsLWNvbG9yLXN1Y2Nlc3MtbGlnaHQtOSk7Cn0KCi8vIC5lbC10aW1lbGluZS1pdGVtX190aW1lc3RhbXAuaXMtdG9wIHsKLy8gcG9zaXRpb246IGFic29sdXRlOwovLyBsZWZ0OiAtMTBzcHg7Ci8vIHRvcDogLTNweDsKLy8gY29sb3I6IHdoaXRlOwovLyBmb250LXNpemU6IDIwcHg7Ci8vIGZvbnQtd2VpZ2h0OiBib2xkOwovLyB9Ci5lbC10aW1lbGluZSB7CiAgcGFkZGluZy1sZWZ0OiAxcHg7Cn0KCi5zY3JvbGwgewogIC8vIGhlaWdodDogNjAwcHg7CiAgb3ZlcmZsb3c6IGF1dG87CiAgLnNjcm9sbC1pdGVtIHsKICAgIC8vIGhlaWdodDogMjAwcHg7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KfQoKLnRodW1ibmFpbC1ib3ggewogIC8vICAgaGVpZ2h0OiAxMTBweDsKICAvLyAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgLy8gICBib3JkZXItcmFkaXVzOiA2cHg7CiAgLy8gICAuZWwtY2FyZF9fYm9keSB7CiAgLy8gICAgICAgcGFkZGluZzogMDsKICAvLyAgIH0KICB3aWR0aDogMTAwJTsKICBtYXgtaGVpZ2h0OiAyNnB4OwogIGZvbnQtc2l6ZTogOHB4OwogIGJvcmRlci1yYWRpdXM6IDVweDsKCiAgJi5jb250ZW50IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICBoZWlnaHQ6IDU1cHg7CiAgICAvLyBtYXJnaW46IDZweDsKICAgIHBhZGRpbmc6IDEwJTsKICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIH0KCiAgJi5vcGFjaXR5IHsKICAgIG9wYWNpdHk6IDAuNTsKICB9CgogICYubm9ybWFsIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDY0MDA7IC8vIzQyYjk4MzsKICB9CgogICYuc3VjY2VzcyB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjdjMjNhOwogIH0KCiAgJi53YXJuaW5nIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmEyM2M7CiAgfQoKICAmLmFsZXJ0IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmMjBjMDA7IC8vI2Y1NmM2YzsKICB9CgogICYuZGVhZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTA5Mzk5OwogIH0KfQoKLmxvZy1ib3ggewogIGZvbnQtc2l6ZTogMTZweDsKICAmLm5vcm1hbCB7CiAgICBjb2xvcjogIzY3YzIzYTsKICB9CgogICYuc3VjY2VzcyB7CiAgICBjb2xvcjogIzY3YzIzYTsKICB9CgogICYud2FybmluZyB7CiAgICBjb2xvcjogI2U2YTIzYzsKICB9CgogICYuYWxlcnQgewogICAgY29sb3I6ICNmNTZjNmM7CiAgfQoKICAmLmRlYWQgewogICAgY29sb3I6ICM5MDkzOTk7CiAgfQp9CgouYmxpbmstYm9yZGVyIHsKICAvLyBib3JkZXI6IDRweCBzb2xpZCAjZmZmZjY2OwogIHBhZGRpbmctdG9wOiAxMCU7CiAgLXdlYmtpdC1hbmltYXRpb246IGRlYWQtdHdpbmtsaW5nIDFzIGluZmluaXRlIGVhc2UtaW4tb3V0Owp9CgpALXdlYmtpdC1rZXlmcmFtZXMgZGVhZC10d2lua2xpbmcgewogIDAlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM5MDkzOTk7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDAgMTBweCByZ2JhKDAsIDI1NSwgMCwgMC4yKSwKICAgICAgaW5zZXQgMCAwIDEwcHggcmdiYSgwLCAyNTUsIDAsIDAuMSksIDAgMXB4IDAgIzM5MzsKICB9CiAgMTAwJSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjU2YzZjOwogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwIDI1cHggcmdiYSgwLCAyNTUsIDAsIDAuNiksCiAgICAgIGluc2V0IDAgMCAxNXB4IHJnYmEoMTI1LCAyMzEsIDEyNSwgMC40KSwgMCAxcHggMCAjNmY2OwogIH0KfQoKLmVtcHR5IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5Owp9CgovKiAuc3RhdHVzLWhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfSAqLwoKLmNsZWFyZml4OmJlZm9yZSwKLmNsZWFyZml4OmFmdGVyIHsKICBkaXNwbGF5OiB0YWJsZTsKICBjb250ZW50OiAiIjsKfQouY2xlYXJmaXg6YWZ0ZXIgewogIGNsZWFyOiBib3RoOwp9CgoudGV4dCB7CiAgZm9udC1zaXplOiAxNHB4Owp9CgouaXRlbSB7CiAgbWFyZ2luLWJvdHRvbTogMThweDsKfQoKLnRpbWUgewogIGZvbnQtc2l6ZTogMTBweDsKICBjb2xvcjogIzk5OTsKfQoKLmJvdHRvbSB7CiAgbWFyZ2luLXRvcDogMTNweDsKICBsaW5lLWhlaWdodDogMTJweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgouYnV0dG9uIHsKICBwYWRkaW5nOiAwOwogIG1pbi1oZWlnaHQ6IGF1dG87Cn0K"},{"version":3,"sources":["/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/views/database/index.vue"],"names":[],"mappings":"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","file":"/Users/benjunliu/Desktop/Work/web/Untitled Folder/src/views/database/index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <el-menu :default-active=\"activeSelection\"\n             mode=\"horizontal\"\n             background-color=\"black\"\n             text-color=\"white\"\n             @select=\"handleSelect\">\n\n      <el-menu-item index=\"all\"\n                    style=\"background-color: rgba(0, 0, 0, 0.1) !important\">\n        Collapsed\n      </el-menu-item>\n      <el-sub-menu index=\"host\">\n        <template #title>Host</template>\n        <el-menu-item v-for=\"(host, index) in hosts\"\n                      :key=\"index\"\n                      :index=\"host.name\">\n          {{ host.name }}\n        </el-menu-item>\n      </el-sub-menu>\n\n      <el-sub-menu index=\"strategy\">\n        <template #title>Strategy</template>\n        <el-menu-item v-for=\"(group, index) in grouped\"\n                      :key=\"index\"\n                      :index=\"group.name\">\n          {{ group.name }}\n        </el-menu-item>\n      </el-sub-menu>\n\n      <el-sub-menu index=\"organize\">\n        <template #title>Organize</template>\n        <el-menu-item index=\"All\">\n          Sequential\n        </el-menu-item>\n        <el-menu-item index=\"Alert Only\">\n          Organized\n        </el-menu-item>\n      </el-sub-menu>\n\n      <el-menu-item index=\"time\"\n                    disabled\n                    style=\"position: absolute;right:0px;\">\n        {{ timeInfo.dateYear }} {{ timeInfo.dateWeek }}\n        {{ timeInfo.dateDay }}\n      </el-menu-item>\n    </el-menu>\n    <!-- <span class=\"text\"\n          style=\"color:red;\">\n      {{ timeInfo.dateYear }} {{ timeInfo.dateWeek }}\n      {{ timeInfo.dateDay }}\n    </span> -->\n  </div>\n  <!-- <div class=\"d-flex jc-between\">\n    <div class=\"d-flex aside-width\"> -->\n  <!-- <div class=\"react-left ml-4\">\n        Host\n        <el-select v-model=\"host\"\n                   class=\"m-2\"\n                   placeholder=\"Select\"\n                   size=\"large\"\n                   @change=\"selectHost\">\n          <el-option v-for=\"item in hosts\"\n                     :key=\"item.value\"\n                     :label=\"item.label\"\n                     :value=\"item.value\" />\n        </el-select>\n      </div> -->\n\n  <!-- <el-dropdown>\n        <div class=\"react-left ml-3\">\n          <span class=\"text\"\n                style=\"color:white\">\n            Host\n          </span>\n        </div>\n        <template #dropdown>\n          <el-dropdown-menu v-for=\"(host, index) in hosts\"\n                            :key=\"index\">\n            <el-dropdown-item>{{ host.name }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n\n      <el-dropdown>\n        <div class=\"react-left ml-3\">\n          <span class=\"text\"\n                style=\"color:white\">\n            Strategy\n          </span>\n        </div>\n        <template #dropdown>\n          <el-dropdown-menu v-for=\"(group, index) in grouped\"\n                            :key=\"index\">\n            <el-dropdown-item>{{ group.name }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown> -->\n\n  <!-- <div class=\"react-left ml-4\" @click=\"click1\">\n              <span class=\"react-before\"></span>\n              <span class=\"text\">{{ subtitle[0] }}</span>\n            </div>\n            <div class=\"react-left ml-4\">\n              <span class=\"text\">{{ subtitle[1] }}</span>\n            </div>\n            <div class=\"react-left ml-4\">\n              <span class=\"text\">{{ subtitle[2] }}</span>\n            </div>\n            <div class=\"react-left ml-4\">\n              <span class=\"text\">{{ subtitle[3] }}</span>\n            </div> -->\n  <!-- </div>\n    <div class=\"d-flex aside-width\">\n      <div class=\"react-right mr-1 react-l-s\">\n        <span class=\"react-after\"></span>\n        <span class=\"text\">\n          {{ timeInfo.dateYear }} {{ timeInfo.dateWeek }}\n          {{ timeInfo.dateDay }}\n        </span>\n      </div>\n    </div>\n  </div> -->\n  <el-container style=\"height:100%;\">\n    <el-main>\n      <el-row :gutter=\"5\"\n              v-for=\"row in rows\"\n              :key=\"row\"\n              style=\"margin-top:0px\">\n        <el-col :span=\"1\"\n                v-for=\"col in cols\"\n                :key=\"col\"\n                style=\"padding: 0px\">\n          <el-popover v-if=\"(row - 1) * cols + col - 1 < programs.length\"\n                      :width=\"600\"\n                      trigger=\"hover\">\n            <!-- popper-style=\"box-shadow: rgb(14 18 22 / 35%) 0px 10px 38px -10px, rgb(14 18 22 / 20%) 0px 10px 20px -15px; padding: 20px;\"> -->\n            <template #reference>\n              <div class=\"thumbnail-box content\"\n                   :class=\"programs[(row - 1) * cols + col - 1].class\"\n                   @mouseenter=\"enterBox((row - 1) * cols + col - 1)\"\n                   @mouseleave=\"leaveBox\">\n                {{ programs[(row - 1) * cols + col - 1].name }}\n              </div>\n            </template>\n            <template #default>\n              <el-descriptions title=\"Program Details\"\n                               direction=\"vertical\"\n                               :column=\"7\"\n                               size=\"large\"\n                               border>\n                <el-descriptions-item label=\"Program\"\n                                      :span=\"3\">\n                  {{ programs[(row - 1) * cols + col - 1].name }}\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Host\"\n                                      :span=\"2\">\n                  {{ programs[(row - 1) * cols + col - 1].host }}\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Pid\">\n                  {{ programs[(row - 1) * cols + col - 1].pid }}\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Reboots\">\n                  <el-tag type=\"danger\">\n                    {{ programs[(row - 1) * cols + col - 1].reboots }}\n                  </el-tag>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Orders\">\n                  <el-tag type=\"success\">\n                    {{ programs[(row - 1) * cols + col - 1]['modules'][0].orders }}\n                  </el-tag>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Trades\">\n                  <el-tag type=\"success\">\n                    {{ programs[(row - 1) * cols + col - 1]['modules'][0].trades }}\n                  </el-tag>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Fails\">\n                  <el-tag type=\"danger\">\n                    {{ programs[(row - 1) * cols + col - 1]['modules'][0].fails }}\n                  </el-tag>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"CurrGMV / MaxGMV\"\n                                      :span=\"2\">\n                  <el-progress :text-inside=\"true\"\n                               :stroke-width=\"24\"\n                               :percentage=\"programs[(row - 1) * cols + col - 1]['modules'][1].currGMV * 100 / programs[(row - 1) * cols + col - 1]['modules'][1].maxGMV\"\n                               :format=\"formatGMV(programs[(row - 1) * cols + col - 1]['modules'][1].currGMV, programs[(row - 1) * cols + col - 1]['modules'][1].maxGMV)\" />\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Symbols\">\n                  <el-tag type=\"success\">\n                    {{ programs[(row - 1) * cols + col - 1]['modules'][2].symbols }}\n                  </el-tag>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"Engaged\">\n                  <el-tag type=\"success\">\n                    {{ programs[(row - 1) * cols + col - 1]['modules'][2].engaged }}\n                  </el-tag>\n                </el-descriptions-item>\n              </el-descriptions>\n            </template>\n          </el-popover>\n          <!-- <el-container \n            v-if=\"(row - 1) * 8 + col - 1 < programs.length\" \n            class=\"thumbnail-box\"\n            style=\"background-color:white\"\n            @click=\"showDrawer\">\n           <el-header height=\"36px\">\n              <el-tag type=\"success\">\n                  {{ programs[(row - 1) * 8 + col - 1].pgInfo.pg }}\n              </el-tag>\n              <el-tag type=\"info\" style=\"margin-left: 6px\">\n                  {{ programs[(row - 1) * 8 + col - 1].pgInfo.host }}\n              </el-tag>\n           </el-header>\n           <el-main>\n            <time class=\"time\">\n              {{ programs[(row - 1) * 8 + col - 1].modInfo.startTime }}\n            </time>\n            <el-popover placement=\"top-start\" title=\"Orders\" trigger=\"hover\">\n                <template #reference>\n                    <el-badge :value=\"programs[(row - 1) * 8 + col - 1].modInfo.orders\" :max=\"10000000\" class=\"item\" type=\"primary\"/>\n                </template>\n            </el-popover>\n            <el-popover placement=\"top-start\" title=\"Trades\" trigger=\"hover\">\n                <template #reference>\n                    <el-badge :value=\"programs[(row - 1) * 8 + col - 1].modInfo.trades\" :max=\"10000000\" class=\"item\" type=\"primary\"/>\n                </template>\n            </el-popover>\n            <el-popover placement=\"top-start\" title=\"Fails\" trigger=\"hover\">\n                <template #reference>\n                    <el-badge :value=\"programs[(row - 1) * 8 + col - 1].modInfo.fails\" :max=\"10000000\" class=\"item\" type=\"danger\"/>\n                </template>\n            </el-popover>\n            <el-badge :value=\"programs[(row - 1) * 8 + col - 1].second.orders\" class=\"item\">\n              <el-button bg text>orders</el-button>\n            </el-badge>\n            <el-badge :value=\"programs[(row - 1) * 8 + col - 1].second.trades\" class=\"item\">\n              <el-button bg text>trades</el-button>\n            </el-badge>\n            <el-badge :value=\"programs[(row - 1) * 8 + col - 1].second.fails\" class=\"item\">\n              <el-button bg text>fails</el-button>\n            </el-badge>\n           </el-main>\n        </el-container>\n        <el-container v-else class=\"thumbnail-box empty\"/> -->\n          <!-- <el-card v-if=\"(row - 1) * 8 + col - 1 < programs.length\" :body-style=\"{ padding: '0px' }\" class=\"status-card\" \n            @click=\"handleClickCard(row, col)\">\n          <template #header>\n            <div class=\"status-header\">\n              <el-tag type=\"success\">\n                  {{ programs[(row - 1) * 8 + col - 1].first.pg }}\n              </el-tag>\n              <el-tag type=\"info\">\n                  {{ programs[(row - 1) * 8 + col - 1].first.host }}\n              </el-tag>\n            </div>\n          </template>\n          <div class=\"bottom\">\n            <time class=\"time\">\n              {{ programs[(row - 1) * 8 + col - 1].second.startTime }}\n            </time>\n            <el-badge :value=\"programs[(row - 1) * 8 + col - 1].second.orders\" class=\"item\">\n              <el-button bg text>orders</el-button>\n            </el-badge>\n            <el-badge :value=\"programs[(row - 1) * 8 + col - 1].second.trades\" class=\"item\">\n              <el-button bg text>trades</el-button>\n            </el-badge>\n            <el-badge :value=\"programs[(row - 1) * 8 + col - 1].second.fails\" class=\"item\">\n              <el-button bg text>fails</el-button>\n            </el-badge>\n          </div>\n        </el-card>\n        <el-card v-else :body-style=\"{padding: '0px'}\" class=\"status-card empty\">\n        </el-card> -->\n        </el-col>\n      </el-row>\n    </el-main>\n    <el-aside width=\"450px\">\n      <el-card v-if=\"0\"\n               style=\"height:0px\">\n        <div v-if=\"activePgIdx\"\n             class=\"clearfix\">\n          <span>\n            {{ programs[activePgIdx].name + \"@\" + programs[activePgIdx].host }}\n          </span>\n        </div>\n        <el-descriptions v-if=\"activePgIdx\"\n                         title=\"\"\n                         :column=\"1\"\n                         border>\n          <el-descriptions-item label=\"Orders/Trades/Fails\"\n                                label-align=\"center\"\n                                align=\"center\"\n                                label-class-name=\"my-label\"\n                                class-name=\"my-content\"\n                                width=\"150px\">\n            <el-badge :value=\"programs[activePgIdx]['modules'][0].fails\"\n                      :max=\"10000000\"\n                      class=\"item\"\n                      type=\"primary\" />\n            <el-badge :value=\"programs[activePgIdx]['modules'][0].trades\"\n                      :max=\"10000000\"\n                      class=\"item\"\n                      type=\"primary\" />\n            <el-badge :value=\"programs[activePgIdx]['modules'][0].fails\"\n                      :max=\"10000000\"\n                      class=\"item\"\n                      type=\"danger\" />\n          </el-descriptions-item>\n          <el-descriptions-item label=\"GMV\"\n                                label-align=\"center\"\n                                align=\"center\">\n            <el-progress :text-inside=\"true\"\n                         :stroke-width=\"24\"\n                         :percentage=\"programs[activePgIdx]['modules'][1].currGMV * 100 / programs[activePgIdx]['modules'][1].maxGMV\"\n                         :format=\"formatGMV(programs[activePgIdx]['modules'][1].currGMV, programs[activePgIdx]['modules'][1].maxGMV)\"\n                         status=\"success\"></el-progress>\n            <!-- <el-badge :value=\"programs[activePgIdx]['modules'][1].currGMV\"\n                      :max=\"20000000\"\n                      class=\"item\"\n                      type=\"primary\" />\n            <el-badge :value=\"programs[activePgIdx]['modules'][1].maxGMV\"\n                      :max=\"20000000\"\n                      class=\"item\"\n                      type=\"primary\" /> -->\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Symbols\"\n                                label-align=\"center\"\n                                align=\"center\">\n            <el-progress :text-inside=\"true\"\n                         :stroke-width=\"24\"\n                         :percentage=\"programs[activePgIdx]['modules'][2].engaged * 100 / programs[activePgIdx]['modules'][2].symbols\"\n                         :format=\"formatSymbols(programs[activePgIdx]['modules'][2].symbols, programs[activePgIdx]['modules'][2].engaged)\"\n                         status=\"success\"></el-progress>\n            <!-- <el-badge :value=\"programs[activePgIdx]['modules'][2].symbols\"\n                      :max=\"10000000\"\n                      class=\"item\"\n                      type=\"primary\" />\n            <el-badge :value=\"programs[activePgIdx]['modules'][2].engaged\"\n                      :max=\"10000000\"\n                      class=\"item\"\n                      type=\"primary\" /> -->\n          </el-descriptions-item>\n        </el-descriptions>\n      </el-card>\n      <div v-scrollBottom\n           class=\"scroll\"\n           style=\"height:100%\">\n        <div v-for=\"(log, index) in logs\"\n             :key=\"index\"\n             class=\"scroll-item\"\n             :style=\"log.color\">\n          <p style=\"font-size:15px\">\n            {{ formatLogTitle(index) }}\n          </p>\n          <p style=\"font-size:15px\">\n            {{ log.text }}\n          </p>\n        </div>\n      </div>\n      <!-- <el-scrollbar ref=\"logContainer\"\n                    height=\"67%\">\n        <el-timeline>\n          <el-timeline-item v-for=\"(log, index) in logs\"\n                            :key=\"index\"\n                            :color=\"log.color\"\n                            :timestamp=\"log.timestamp\"\n                            placement=\"top\">\n            <div class=\"thumbnail-box log-box\"\n                 :class=\"log.level\"\n                 style=\"min-height:30px;background-color:white;\">\n              {{ log.msg }}\n            </div>\n          </el-timeline-item>\n        </el-timeline>\n      </el-scrollbar> -->\n    </el-aside>\n  </el-container>\n  <!-- <el-drawer\n        v-model=\"visible\"\n        title=\"All programs\"\n        direction=\"rtl\"\n        size=\"60%\">\n        <el-table :data=\"programs\"\n            :row-class-name=\"tableRowClassName\">\n            <el-table-column v-for=\"key in programs_keys\" :key=\"key\" :property=\"key\" :label=\"key\" width=\"150\" />\n            <el-table-column property=\"pgInfo.host\" label=\"Host\" width=\"150\"/>\n            <el-table-column property=\"pgInfo.pg\" label=\"Program\" width=\"150\" />\n            <el-table-column property=\"pgInfo.pid\" label=\"Pid\" />\n            <el-table-column property=\"modInfo.name\" label=\"Name\" width=\"150\" />\n            <el-table-column property=\"modInfo.orders\" label=\"Orders\" />\n            <el-table-column property=\"modInfo.trades\" label=\"Trades\" />\n            <el-table-column property=\"modInfo.fails\" label=\"Fails\" />\n            <el-table-column property=\"modInfo.startTime\" label=\"Since\" width=\"150\"/>\n            <el-table-column property=\"modInfo.currGMV\" label=\"Curr GMV\" />\n            <el-table-column property=\"modInfo.maxGMV\" label=\"Max GMV\" />\n            <el-table-column property=\"modInfo.symbols\" label=\"Symbols\" />\n            <el-table-column property=\"modInfo.engaged\" label=\"engaged\" />\n        </el-table>\n    </el-drawer> -->\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  reactive,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n} from \"vue\";\n// import EntryDrawer from './components/entrydrawer.vue'\nimport http from \"@/utils/network/http\";\nimport { ElMessage } from \"_element-plus@1.2.0-beta.6@element-plus/es\";\nimport { dealResponseCode } from \"@/utils/functions\";\nimport { formatTime } from \"@/utils/index\";\nimport { subtitle, WEEK } from \"@/constant/index\";\n// import scroll from \"vue-seamless-scroll\";\n\n// const currentDate = ref(new Date())\n// let entry_drawer = ref(null)\n// const programsNum = ref(0)\n\nconst timeInfo = reactive({\n  setInterval: 0,\n  dateDay: \"\",\n  dateYear: \"\",\n  dateWeek: \"\",\n});\n\nconst formatTimeInfo = () => {\n  const date = new Date();\n  timeInfo.dateDay = formatTime(date, \"HH: mm: ss\");\n  timeInfo.dateYear = formatTime(date, \"yyyy-MM-dd\");\n  timeInfo.dateWeek = WEEK[date.getDay()];\n};\n\nconst handleTime = () => {\n  timeInfo.setInterval = setInterval(() => {\n    formatTimeInfo();\n  }, 1000);\n};\n\nformatTimeInfo();\nhandleTime();\n\nlet host = ref(null);\n// const hosts = [\n//   {\n//     value: \"fpis_kbsiml14\",\n//     label: \"fpis_kbsiml14\",\n//   },\n//   {\n//     value: \"fpis_kbsiml35\",\n//     label: \"fpis_kbsiml35\",\n//   },\n//   {\n//     value: \"fpis_kbsiml66\",\n//     label: \"fpis_kbsiml66\",\n//   },\n// ];\n\nlet grouped = ref([]);\nlet hosts = ref([]);\n\nlet onlyShowAlert = ref(false);\nlet actualPrograms = ref([]); // the stored whole programs\nlet programs = ref([]); // for show\n\nlet logs = ref([]);\nconst activeGroupIdx = ref(null);\nlet activePgIdx = ref(null);\nconst activeSelection = ref(\"all\");\nlet isGrouping = ref(true);\n\nconst createNewSocket = () => {\n  socket.close();\n\n  socket = new WebSocket(socketUrl);\n\n  socket.onopen = function () {\n    console.log(\"socket opened...\");\n  };\n\n  socket.onmessage = parseSocketMsg;\n\n  socket.onerror = function () {\n    ElMessage({\n      message: \"Websocket error\",\n      grouping: true,\n      type: \"error\",\n    });\n  };\n\n  socket.onclose = function () {\n    console.log(\"Websocket closed......\");\n  };\n};\n\nconst handleSelect = (key: string, keyPath: string[]) => {\n  if (keyPath[0] == \"organize\") {\n    onlyShowAlert.value = key == \"Alert Only\";\n    isGrouping.value = false;\n    return;\n  }\n\n  if (keyPath[0] == \"all\") {\n    isGrouping.value = true;\n    // socketUrl = \"ws://192.168.0.120:6919/quoter/all/all\";\n    socketUrl = \"ws://7.151.16.99:6919/quoter/all/all\";\n  } else if (keyPath[0] == \"host\") {\n    isGrouping.value = false;\n    // socketUrl = \"ws://192.168.0.120:6919/quoter/host/\" + key;\n    socketUrl = \"ws://7.151.16.99:6919/quoter/host/\" + key\n  } else if (keyPath[0] == \"strategy\") {\n    isGrouping.value = false;\n    // socketUrl = \"ws://192.168.0.120:6919/quoter/strategy/\" + key;\n    socketUrl = \"ws://7.151.16.99:6919/quoter/strategy/\" + key\n  }\n\n  createNewSocket();\n};\n\nconst formatLogTitle = (index) => {\n  for (var program of actualPrograms.value) {\n    if (logs.value[index].id === program.id) {\n      return (\n        \"[\" +\n        logs.value[index].ctime +\n        \"]:\" +\n        program.name +\n        \"@\" +\n        hosts.value[program.host - 1].name\n      );\n    }\n  }\n};\n\nconst setOpacity = (index, isOpacity) => {\n  if (isOpacity) {\n    programs.value[index].class = programs.value[index].class + \" opacity\";\n  } else {\n    programs.value[index].class = programs.value[index].class.replace(\n      /opacity/g,\n      \"\"\n    );\n  }\n};\n\nwatch(onlyShowAlert, (newValue, oldValue) => {\n  if (newValue) {\n    programs.value = [];\n    var normal = [];\n    var abnormal = [];\n    for (var program of actualPrograms.value) {\n      if (program[\"class\"].indexOf(\"alert\") !== -1) {\n        abnormal.push(program);\n      } else {\n        normal.push(program);\n      }\n    }\n    programs.value = normal.concat(abnormal);\n  } else {\n    programs.value = actualPrograms.value;\n  }\n  rows.value = Math.ceil(programs.value.length / cols.value);\n});\n\nwatch(activeGroupIdx, (newValue, oldValue) => {\n  console.log(newValue, \"<----\", oldValue);\n  if (newValue == null) {\n    if (isGrouping.value) {\n      programs.value = [];\n      for (var group of grouped.value) {\n        var newProgram = null;\n        for (var program of actualPrograms.value) {\n          if (program.group == group.id) {\n            if (program[\"class\"].indexOf(\"alert\") !== -1) {\n              newProgram = {\n                group: group.id,\n                name: group.name,\n                class: \"alert\",\n                modules: [\n                  { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                  { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                  { name: \"component3\", symbols: 0, engaged: 0 },\n                ],\n              };\n            } else {\n              newProgram = {\n                group: group.id,\n                name: group.name,\n                class: \"normal\",\n                modules: [\n                  { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                  { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                  { name: \"component3\", symbols: 0, engaged: 0 },\n                ],\n              };\n            }\n          }\n        }\n        if (newProgram !== null) {\n          programs.value.push(newProgram);\n        }\n      }\n    }\n\n    for (program of programs.value) {\n      program.class = program.class.replace(/opacity/g, \"\");\n    }\n  } else {\n    if (isGrouping.value) {\n      programs.value = [];\n      for (group of grouped.value) {\n        if (group.id === newValue) {\n          for (program of actualPrograms.value) {\n            if (program.group === newValue) {\n              programs.value.push(program);\n            }\n          }\n        } else {\n          newProgram = null;\n          for (program of actualPrograms.value) {\n            if (program.group == group.id) {\n              if (program[\"class\"].indexOf(\"alert\") !== -1) {\n                newProgram = {\n                  group: group.id,\n                  name: group.name,\n                  class: \"alert\",\n                  modules: [\n                    { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                    { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                    { name: \"component3\", symbols: 0, engaged: 0 },\n                  ],\n                };\n                break;\n              } else {\n                newProgram = {\n                  group: group.id,\n                  name: group.name,\n                  class: \"normal\",\n                  modules: [\n                    { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                    { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                    { name: \"component3\", symbols: 0, engaged: 0 },\n                  ],\n                };\n              }\n            } else if (newProgram !== null) {\n              break;\n            }\n          }\n          if (newProgram !== null) {\n            programs.value.push(newProgram);\n          }\n        }\n      }\n    }\n    for (program of programs.value) {\n      if (program.group != newValue) {\n        program.class = program.class + \" opacity\";\n      } else {\n        program.class = program.class.replace(/opacity/g, \"\");\n        // ElMessage({\n        //   message: grouped.value[program.group].name,\n        //   grouping: true,\n        //   type: \"success\",\n        // });\n      }\n    }\n\n    // var oldGroupIdx = -1,\n    //   newGroupIdx = -1;\n    // for (var group of grouped.value) {\n    //   var idx = group.programs.indexOf(newValue);\n    //   if (idx !== -1) {\n    //     newGroupIdx = idx;\n    //     for (idx of group.programs) {\n    //       setOpacity(idx, false);\n    //     }\n    //   }\n    //   if (oldValue !== null) {\n    //     idx = group.programs.indexOf(oldValue);\n    //     if (idx !== -1) {\n    //       oldGroupIdx = idx;\n    //     }\n    //   }\n\n    //   if ((oldGroupIdx !== -1 || oldValue == null) && newGroupIdx !== -1) {\n    //     break;\n    //   }\n    // }\n  }\n});\nconst enterBox = (index) => {\n  activePgIdx.value = index;\n  console.log(\"programs:\", programs.value);\n  activeGroupIdx.value = programs.value[index].group;\n  // console.log(\"enter...\");\n  // for ( var i = 0; i < programs.value.length; ++i) {\n  //   console.log(\"Before\", programs.value[i].class)\n  //   programs.value[i].class.replace(/opacity/g, \"\")\n  //   if ( i != index ) {\n  //     programs.value[i].class += \" opacity\"\n  //   }\n  //   console.log(\"After\", programs.value[i].class)\n  // }\n};\n\nconst leaveBox = () => {\n  console.log(\"leave...\");\n  // activePgIdx.value = null;\n  // activeGroupIdx.value = null;\n  // for ( var i = 0; i < programs.value.length; ++i) {\n  //   programs.value[i].class.replace(/opacity/g, \"\")\n  // }\n};\n\nconst logContainer = ref(null);\nlet rows = ref(0);\nlet cols = ref(24);\nlet visible = ref(false);\n// let queryTimer = ref(null)\nlet query = {\n  from: null,\n  to: null,\n  name: null,\n  number: null,\n};\nconst numberKeys = [\"orders\", \"trades\", \"fails\", \"currGMV\", \"maxGMV\"];\n\n// let programs_keys = ref([]);\n\nonBeforeUnmount(() => {\n  console.log(\"onBeforeUnmount\");\n  //   stopQueryStatus()\n});\n\nconst tableRowClassName = ({ row, rowIndex }) => {\n  console.log(\"row....\", row.second.fails, row.second.fails > 300);\n  if (row.second.fails > 300) {\n    return \"error-row\";\n  } else if (row.second.since == \"\") {\n    return \"warning-row\";\n  }\n  return \"\";\n};\n\nconst formatGMV = (currGMV, maxGMV) => {\n  return () => {\n    return \"Curr:\" + currGMV; // + \",Max:\" + maxGMV;\n  };\n};\n\nconst formatSymbols = (symbols, engaged) => {\n  return () => {\n    return \"Symbols:\" + symbols + \",Engaged: \" + engaged;\n  };\n};\n\nconst parseSocketMsg = (msg) => {\n  var response = JSON.parse(msg.data);\n  console.log(\"response\")\n  console.log(response)\n  dealResponseCode(\n    response,\n    function successHandler() {\n      // first time: get the whole programs\n      if (response.data.programs !== undefined) {\n        onlyShowAlert.value = false;\n        actualPrograms.value = [];\n        programs.value = [];\n        grouped.value = [];\n        hosts.value = [];\n        logs.value = [];\n        rows.value = 0;\n        activePgIdx.value = null;\n        activeGroupIdx.value = null;\n\n        if (response.data.logs !== undefined) {\n          for (i = 0; i < response.data.logs.length; ++i) {\n            if (response.data.logs[i].level == \"0\") {\n              var color = \"color: #67c23a\"; // success\n            } else if (response.data.logs[i].level == \"1\") {\n              color = \"color: #e6a23c\"; // warning\n            } else if (response.data.logs[i].level == \"2\") {\n              color = \"color: #f20c00\"; // alert #f56c6c\n            } else {\n              color = \"color: #909399\";\n            }\n            logs.value.push({\n              id: response.data.logs[i].program,\n              text: response.data.logs[i].text,\n              level: response.data.logs[i].level,\n              color: color,\n              ctime: response.data.logs[i].ctime,\n            });\n          }\n        }\n\n        grouped.value = response.data.groups;\n        for (var i = 0; i < grouped.value.length; ++i) {\n          grouped.value[i].opacity = 1;\n        }\n        console.log(\"coming hosts...\")\n        console.log(response.data.hosts)\n        hosts.value = response.data.hosts;\n        console.log(\"parsed hosts\")\n        console.log(hosts.value)\n        actualPrograms.value = response.data.programs;\n\n        for (i = 0; i < actualPrograms.value.length; ++i) {\n          if (actualPrograms.value[i].modules == undefined) {\n            actualPrograms.value[i].modules = [];\n            actualPrograms.value[i][\"class\"] = \"dead blink-border\";\n          } else if (\n            actualPrograms.value[i].modules[0].fails >\n            actualPrograms.value[i].modules[0].trades\n          ) {\n            actualPrograms.value[i][\"class\"] = \"alert\";\n          } else {\n            actualPrograms.value[i][\"class\"] = \"normal\";\n          }\n        }\n\n        if (isGrouping.value) {\n          for (var group of grouped.value) {\n            var newProgram = null;\n            for (var program of actualPrograms.value) {\n              if (program.group == group.id) {\n                if (program[\"class\"].indexOf(\"alert\") !== -1) {\n                  newProgram = {\n                    group: group.id,\n                    name: group.name,\n                    class: \"alert\",\n                    modules: [\n                      { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                      { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                      { name: \"component3\", symbols: 0, engaged: 0 },\n                    ],\n                  };\n                } else {\n                  newProgram = {\n                    group: group.id,\n                    name: group.name,\n                    class: \"normal\",\n                    modules: [\n                      { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                      { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                      { name: \"component3\", symbols: 0, engaged: 0 },\n                    ],\n                  };\n                }\n              }\n            }\n            if (newProgram !== null) {\n              programs.value.push(newProgram);\n            }\n          }\n        } else {\n          programs.value = actualPrograms.value;\n        }\n\n        console.log(\"Programs: \", programs.value);\n        console.log(\"actualPrograms: \", actualPrograms.value);\n      } else {\n        program = response.data.program;\n        for (var idx = 0; idx < actualPrograms.value.length; ++idx) {\n          if (actualPrograms.value[idx].id == program.id) {\n            break;\n          }\n        }\n\n        actualPrograms.value[idx].group = program.group;\n        actualPrograms.value[idx].host = program.host;\n        actualPrograms.value[idx].pid = program.pid;\n        actualPrograms.value[idx].reboots = program.reboots;\n\n        actualPrograms.value[idx][\"class\"] = actualPrograms.value[idx][\n          \"class\"\n        ].replace(/alert/g, \"normal\");\n        for (var newModule of program[\"modules\"]) {\n          if (\n            newModule[\"name\"] == \"component2\" &&\n            newModule[\"fails\"] > newModule[\"trades\"]\n          ) {\n            actualPrograms.value[idx][\"class\"] = \"alert\";\n          }\n        }\n\n        for (newModule of program[\"modules\"]) {\n          for (var oldModule of actualPrograms.value[idx][\"modules\"]) {\n            if (newModule[\"name\"] == oldModule[\"name\"]) {\n              oldModule = newModule;\n            }\n          }\n          if (newModule[\"name\"] == \"log\") {\n            if (newModule[\"level\"] == \"0\") {\n              color = \"color: #67c23a\"; // success\n            } else if (newModule[\"level\"] == \"1\") {\n              color = \"color: #e6a23c\"; // warning\n            } else if (newModule[\"level\"] == \"2\") {\n              color = \"color: #f20c00\"; // alert #f56c6c\n            } else {\n              color = \"color: #909399\";\n            }\n            logs.value.push({\n              id: program.id,\n              text: newModule[\"text\"],\n              level: newModule[\"level\"],\n              color: color,\n              ctime: newModule[\"ctime\"],\n            });\n          }\n        }\n        if (logs.value.length > 40) {\n          logs.value = logs.value.slice(logs.value.length - 40);\n        }\n\n        programs.value = [];\n        if (isGrouping.value) {\n          if (activeGroupIdx.value !== null) {\n            for (group of grouped.value) {\n              if (group.id === activeGroupIdx.value) {\n                for (program of actualPrograms.value) {\n                  if (program.group === activeGroupIdx.value) {\n                    programs.value.push(program);\n                  }\n                }\n              } else {\n                newProgram = null;\n                for (program of actualPrograms.value) {\n                  if (program.group == group.id) {\n                    if (program[\"class\"].indexOf(\"alert\") !== -1) {\n                      newProgram = {\n                        group: group.id,\n                        name: group.name,\n                        class: \"alert\",\n                        modules: [\n                          {\n                            name: \"component1\",\n                            orders: 0,\n                            trades: 0,\n                            fails: 0,\n                          },\n                          { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                          { name: \"component3\", symbols: 0, engaged: 0 },\n                        ],\n                      };\n                      break;\n                    } else {\n                      newProgram = {\n                        group: group.id,\n                        name: group.name,\n                        class: \"normal\",\n                        modules: [\n                          {\n                            name: \"component1\",\n                            orders: 0,\n                            trades: 0,\n                            fails: 0,\n                          },\n                          { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                          { name: \"component3\", symbols: 0, engaged: 0 },\n                        ],\n                      };\n                    }\n                  } else if (newProgram !== null) {\n                    break;\n                  }\n                }\n                if (newProgram !== null) {\n                  programs.value.push(newProgram);\n                }\n              }\n            }\n          } else {\n            for (group of grouped.value) {\n              newProgram = null;\n              for (program of actualPrograms.value) {\n                if (program.group == group.id) {\n                  if (program[\"class\"].indexOf(\"alert\") !== -1) {\n                    newProgram = {\n                      group: group.id,\n                      name: group.name,\n                      class: \"alert\",\n                      modules: [\n                        { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                        { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                        { name: \"component3\", symbols: 0, engaged: 0 },\n                      ],\n                    };\n                    break;\n                  } else {\n                    newProgram = {\n                      group: group.id,\n                      name: group.name,\n                      class: \"normal\",\n                      modules: [\n                        { name: \"component1\", orders: 0, trades: 0, fails: 0 },\n                        { name: \"component2\", currGMV: 0, maxGMV: 1 },\n                        { name: \"component3\", symbols: 0, engaged: 0 },\n                      ],\n                    };\n                  }\n                } else if (newProgram !== null) {\n                  break;\n                }\n              }\n              if (newProgram !== null) {\n                programs.value.push(newProgram);\n              }\n            }\n          }\n        } else if (onlyShowAlert.value) {\n          var normal = [];\n          var abnormal = [];\n          for (program of actualPrograms.value) {\n            if (program[\"class\"].indexOf(\"alert\") !== -1) {\n              abnormal.push(program);\n            } else {\n              normal.push(program);\n            }\n          }\n          programs.value = normal.concat(abnormal);\n        } else {\n          programs.value = actualPrograms.value;\n        }\n      }\n      rows.value = Math.ceil(programs.value.length / cols.value);\n    },\n    function failHandler() {\n      ElMessage.error(\"failure\" + \":\" + response.msg);\n    },\n    () => {\n      // nothing\n    }\n  );\n};\n\n// const startQueryStatus = () => {\n//   console.log(\"query...\");\n//   //   let url = 'quoter/all'\n//   query.from = 0;\n//   query.to = \"jump trading\";\n\n//   http.get(\"quoter/all\", query, Object).then((response) => {\n//     programs.value = response.data.quoters;\n//   });\n// };\n\n// const stopQueryStatus = () => {\n//   clearInterval(queryTimer.value)\n//   queryTimer.value = null\n// }\n\n// const handleClickCard = (row, col) => {\n//     console.log(row, col)\n// }\n\n// const enterThumbnail = (index) => {\n//   console.log(index);\n//   console.log(programs.value[index]);\n//   programs.value[index].isShowPopOver = true;\n// };\n\n// const leaveThumnail = (index) => {\n//   programs.value[index].isShowPopOver = false;\n// };\n\n// const clickPop = (index) => {\n//   if (activeId.value == index && showPop.value) return;\n//   showPop.value = false;\n//   activeId.value = index;\n//   nextTick(() => {\n//     showPop.value = true;\n//     nextTick(() => {\n//       pop.value?.doShow();\n//     });\n//   });\n// };\n\nconst showDrawer = () => {\n  console.log(\"clicked\");\n  visible.value = true;\n  // entry_drawer.value.show(programs)\n};\n\n// queryTimer.value = setInterval(startQueryStatus, 10000)\n\n// startQueryStatus()\n\nlet socket;\nlet socketUrl;\n\nif (typeof WebSocket == \"undefined\") {\n  ElMessage({\n    message: \"Websocket is unsupported, please use Chrome\",\n    grouping: true,\n    type: \"error\",\n  });\n} else {\n  // const socketUrl = 'ws://localhost:6919/wx/?level=all&key=all'\n  socketUrl = \"ws://7.151.16.99:6919/quoter/all/all\";\n  // socketUrl = \"ws://192.168.0.120:6919/quoter/all/all\";\n  socket = new WebSocket(socketUrl);\n  socket.onopen = function () {\n    console.log(\"socket opened...\");\n    // socket.send(\n    //   JSON.stringify({\n    //     username: \"bliu\",\n    //     msg: \"test websocket\",\n    //   })\n    // );\n  };\n  socket.onmessage = parseSocketMsg;\n  socket.onerror = function () {\n    ElMessage({\n      message: \"Websocket error\",\n      grouping: true,\n      type: \"error\",\n    });\n  };\n  socket.onclose = function () {\n    console.log(\"Websocket closed......\");\n  };\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/index.scss\";\n\n.el-table .warning-row {\n  // --el-table-tr-bg-color: var(--el-color-warning-light-9);\n  background-color: red;\n}\n\n.el-table .error-row {\n  --el-table-tr-bg-color: var(--el-color-success-light-9);\n}\n\n// .el-timeline-item__timestamp.is-top {\n// position: absolute;\n// left: -10spx;\n// top: -3px;\n// color: white;\n// font-size: 20px;\n// font-weight: bold;\n// }\n.el-timeline {\n  padding-left: 1px;\n}\n\n.scroll {\n  // height: 600px;\n  overflow: auto;\n  .scroll-item {\n    // height: 200px;\n    font-size: 12px;\n    margin-bottom: 10px;\n  }\n}\n\n.thumbnail-box {\n  //   height: 110px;\n  //   margin-bottom: 10px;\n  //   border-radius: 6px;\n  //   .el-card__body {\n  //       padding: 0;\n  //   }\n  width: 100%;\n  max-height: 26px;\n  font-size: 8px;\n  border-radius: 5px;\n\n  &.content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    height: 55px;\n    // margin: 6px;\n    padding: 10%;\n    text-overflow: ellipsis;\n  }\n\n  &.opacity {\n    opacity: 0.5;\n  }\n\n  &.normal {\n    background-color: #006400; //#42b983;\n  }\n\n  &.success {\n    background-color: #67c23a;\n  }\n\n  &.warning {\n    background-color: #e6a23c;\n  }\n\n  &.alert {\n    background-color: #f20c00; //#f56c6c;\n  }\n\n  &.dead {\n    background-color: #909399;\n  }\n}\n\n.log-box {\n  font-size: 16px;\n  &.normal {\n    color: #67c23a;\n  }\n\n  &.success {\n    color: #67c23a;\n  }\n\n  &.warning {\n    color: #e6a23c;\n  }\n\n  &.alert {\n    color: #f56c6c;\n  }\n\n  &.dead {\n    color: #909399;\n  }\n}\n\n.blink-border {\n  // border: 4px solid #ffff66;\n  padding-top: 10%;\n  -webkit-animation: dead-twinkling 1s infinite ease-in-out;\n}\n\n@-webkit-keyframes dead-twinkling {\n  0% {\n    background-color: #909399;\n    background-position: 0 0 10px rgba(0, 255, 0, 0.2),\n      inset 0 0 10px rgba(0, 255, 0, 0.1), 0 1px 0 #393;\n  }\n  100% {\n    background-color: #f56c6c;\n    background-position: 0 0 25px rgba(0, 255, 0, 0.6),\n      inset 0 0 15px rgba(125, 231, 125, 0.4), 0 1px 0 #6f6;\n  }\n}\n\n.empty {\n  background-color: gray;\n}\n\n/* .status-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n} */\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both;\n}\n\n.text {\n  font-size: 14px;\n}\n\n.item {\n  margin-bottom: 18px;\n}\n\n.time {\n  font-size: 10px;\n  color: #999;\n}\n\n.bottom {\n  margin-top: 13px;\n  line-height: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.button {\n  padding: 0;\n  min-height: auto;\n}\n</style>"]}]}